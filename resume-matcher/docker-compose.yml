

services:
  backend:
#    build: .
    image: ritik047/resume-backend
    container_name: resume-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - JWT_SECRET=
      - GEMINI_API_URL=
      - GEMINI_API_KEY=
    depends_on:
      redis:
        condition: service_healthy # Wait for Redis to be healthy
    networks:
      - my_app_network

  redis:
    image: redis:7
    container_name: resume-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - my_app_network
    healthcheck: # Health check added for Redis
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 50

  jenkins:
    container_name: resume-jenkins
    image: jenkins/jenkins:lts
    user: root
    restart: always
    ports:
      - "9090:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
#      - C:/Program Files/Docker/Docker/resources/bin/docker.exe:/usr/bin/docker
#    environment:
#      - DOCKER_HOST=tcp://host.docker.internal:2375
    networks:
      - my_app_network

volumes:
  redis-data:
  jenkins_home:

networks:
  my_app_network:
    driver: bridge
